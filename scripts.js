const contacts = [];

const contactListEl = document.getElementById('contact-list');
const searchEl = document.getElementById('search');
const addContactBtn = document.getElementById('add-contact');
const addModal = document.getElementById('add-modal');
const closeModalBtn = document.getElementById('close-modal');
const addContactForm = document.getElementById('add-contact-form');

function renderContacts() {
    contactListEl.innerHTML = '';
    const query = searchEl.value.toLowerCase();

    const sortedContacts = [...contacts]
        .filter(contact => contact.name.toLowerCase().includes(query))
        .sort((a, b) => (b.isFavorite - a.isFavorite) || a.name.localeCompare(b.name));

    sortedContacts.forEach(contact => {
        const card = document.createElement('div');
        card.className = 'contact-card';

        const contactInfo = document.createElement('div');
        contactInfo.className = 'contact-info';
        contactInfo.innerHTML = `
            <img src="https://via.placeholder.com/50" alt="${contact.name}">
            <div>
                <div>${contact.name}</div>
                <div>${contact.phone}</div>
            </div>
        `;

        const actions = document.createElement('div');
        actions.className = 'actions';

        const favoriteBtn = document.createElement('button');
        favoriteBtn.textContent = contact.isFavorite ? '‚òÖ' : '‚òÜ';
        favoriteBtn.title = contact.isFavorite ? '–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ' : '–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ';
        favoriteBtn.addEventListener('click', () => {
            contact.isFavorite = !contact.isFavorite;
            renderContacts();
        });

        const deleteBtn = document.createElement('button');
        deleteBtn.textContent = 'üóë';
        deleteBtn.title = '–£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç';
        deleteBtn.addEventListener('click', () => {
            const index = contacts.indexOf(contact);
            contacts.splice(index, 1);
            renderContacts();
        });

        actions.appendChild(favoriteBtn);
        actions.appendChild(deleteBtn);
        card.appendChild(contactInfo);
        card.appendChild(actions);
        contactListEl.appendChild(card);
    });
}

addContactForm.addEventListener('submit', e => {
    e.preventDefault();

    const name = document.getElementById('name').value.trim();
    const phone = document.getElementById('phone').value.trim();
    const isFavorite = document.getElementById('is-favorite').checked;

    if (!name || !phone || !/^\+7 \(\d{3}\) \d{3}-\d{2}-\d{2}$/.test(phone)) {
        alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7 (XXX) XXX-XX-XX');
        return;
    }

    contacts.push({ name, phone, isFavorite });
    addModal.classList.remove('active');
    renderContacts();
    addContactForm.reset();
});

addContactBtn.addEventListener('click', () => addModal.classList.add('active'));
closeModalBtn.addEventListener('click', () => addModal.classList.remove('active'));

searchEl.addEventListener('input', renderContacts);

let addedPlusSeven = false; // –ù–æ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è

document.getElementById('phone').addEventListener('input', e => {
    let value = e.target.value.replace(/\D/g, '');
    if (value.length > 11) {
        value = value.substring(0, 11);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º "+7" —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –∏ –¥–ª–∏–Ω–∞ –Ω–µ 0, –ò –µ—Å–ª–∏ –º—ã –µ–≥–æ —Å–∞–º–∏ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏
    if (value.length > 0 && !value.startsWith('+7') && !addedPlusSeven) {
        value = '+7' + value;
        addedPlusSeven = true; // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –º—ã –¥–æ–±–∞–≤–∏–ª–∏ "+7"
    } else if (value.length === 0) { // –ï—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ
      addedPlusSeven = false;
    } else if (value.length < 3 && value.startsWith('+7')){ // –ï—Å–ª–∏ —É–¥–∞–ª–∏–ª–∏ "+7"
        value = value.substring(2); // –£–¥–∞–ª—è–µ–º "+7" –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –∫–æ—Ä–æ—á–µ 3
        addedPlusSeven = false;
    }


    let formattedValue = '';
    if (value.length > 0) {
        formattedValue = value.replace(/(\d{1})(\d{3})(\d{3})(\d{2})(\d{2})/, '+7 ($2) $3-$4-$5');
    }

    e.target.value = formattedValue;
});

renderContacts();
